/*
 * File: app/view/ProductOptionWindow.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TeShopifyExt.view.ProductOptionWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.productoptionwindow',

    height: 300,
    width: 500,
    title: 'Add A New Option',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    border: false,
                    height: 300,
                    id: 'ProductOptionForm',
                    autoScroll: true,
                    layout: {
                        align: 'stretch',
                        type: 'vbox'
                    },
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'textfield',
                            fieldLabel: 'Internal Code',
                            labelSeparator: '',
                            name: 'code',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            fieldLabel: 'Name',
                            labelSeparator: '',
                            name: 'name',
                            allowBlank: false
                        },
                        {
                            xtype: 'dataview',
                            id: 'OptionValuesView',
                            tpl: [
                                '<tpl for="."><div><p style="background-color:#97bd66; color: #fff; float:left; margin:5px; display:table; border-spacing:3px"><span style="display:table-cell; vertical-align:middle; padding:3px"> {code} </span><small style="display:table-cell;vertical-align:middle;padding: 2px;"><a href="#" title="Double Click To Remove"style="text-decoration: none; color: #fff"> x</a></small> </p></div></tpl>'
                            ],
                            itemSelector: 'div',
                            store: 'OptionValueStore',
                            listeners: {
                                itemdblclick: {
                                    fn: me.onOptionValuesViewItemDblClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            fieldLabel: 'Values',
                            labelSeparator: '',
                            name: 'values',
                            emptyText: 'Enter any number of options separated by a comma.',
                            enableKeyEvents: true,
                            listeners: {
                                keyup: {
                                    fn: me.onTextfieldKeyup,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'hiddenfield',
                            fieldLabel: 'Label',
                            name: 'id',
                            value: 0
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    ui: 'footer',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            text: 'Add',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            listeners: {
                close: {
                    fn: me.onWindowClose,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onOptionValuesViewItemDblClick: function(dataview, record, item, index, e, eOpts) {
        Ext.StoreMgr.lookup('OptionValueStore').removeAt(index);
    },

    onTextfieldKeyup: function(textfield, e, eOpts) {
        var text = textfield.getValue();
        if (text.charAt(text.length-1) == ','){
            Ext.getCmp('OptionValuesView').show();
            var optionRecord = Ext.create('TeShopifyExt.model.ProductOptionModel');
            optionRecord.set('code','Test Size');
            optionRecord.set('name','Test Name');
            var optionStore = Ext.StoreMgr.lookup('ProductOptionStore');
            optionStore.add(optionRecord);
            var valueRecord = Ext.create('TeShopifyExt.model.OptionValueModel');
            valueRecord.set('code',text.substring(0,text.length-1));
            var valueStore = Ext.StoreMgr.lookup('OptionValueStore');
            valueStore.add(valueRecord);
            optionRecord.values().add(valueRecord);
            textfield.setValue('');
            Ext.getCmp('OptionValuesView').refresh();
            Ext.Ajax.request({
                url: 'shopify/option/create',
                jsonData: optionRecord.getData(),
                success: function(response, opts) {
                    console.log('success');
                }
            });
        }
    },

    onButtonClick: function(button, e, eOpts) {
        var panel = button.up('form');
        var form = panel.getForm();
        if (form.isValid()) {
            panel.setLoading('Saving ... ');
            var id = panel.down('hiddenfield[name="id"]').getValue();
            var url = '';                    
            if ( id > 0) {
                url = '/shopify/option/edit';
            } else {
                url = '/shopify/option/add';
            } 
            form.submit({
                url: url,
                success: function(form,action){
                    panel.setLoading(false);
                    Ext.StoreMgr.lookup('ProductOptionStore').reload();
                    button.up('window').close();
                },
                failure: function(form, action){
                    panel.setLoading(false);
                    var msg  = action.result.msg; 
                    Ext.Msg.show({
                        msg: msg,
                        buttons: Ext.Msg.OK,
                        icon: Ext.Msg.WARNING
                    });
                    button.up('window').close();
                }
            });
        }   
    },

    onWindowClose: function(panel, eOpts) {
        Ext.StoreMgr.lookup('OptionValueStore').removeAll();
    }

});