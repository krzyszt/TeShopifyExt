/*
 * File: app/view/ShopifyShopsTree.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('TeShopifyExt.view.ShopifyShopsTree', {
    extend: 'Ext.tree.Panel',
    alias: 'widget.shopifyshopstree',

    border: false,
    hidden: true,
    id: 'ShopifyShopsTree',
    margin: '0 0 0 20',
    bodyBorder: false,
    hideCollapseTool: true,
    hideHeaders: true,
    store: 'ShopifyShopsTreeStore',
    displayField: 'name',
    folderSort: false,
    lines: false,
    useArrows: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                rootVisible: false
            },
            columns: [
                {
                    xtype: 'treecolumn',
                    border: false,
                    width: 160,
                    dataIndex: 'name',
                    text: 'MyTreeColumn'
                },
                {
                    xtype: 'actioncolumn',
                    width: 30,
                    align: 'center',
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                var id = record.get('id');
                                if (id) {
                                    var win = Ext.widget('shopifyshopwindow');
                                    win.show();
                                    win.down('form').loadRecord(record);
                                }
                            },
                            icon: '/resources/css/img/edit.png',
                            iconCls: 'x-hidden',
                            tooltip: 'Edit'
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    border: false,
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            margin: '0 20 0 0',
                            text: 'Create',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            listeners: {
                itemmouseenter: {
                    fn: me.onShopifyShopsTreeItemMouseEnter,
                    scope: me
                },
                itemmouseleave: {
                    fn: me.onShopifyShopsTreeItemMouseLeave,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        var win = Ext.widget('shopifyshopwindow');
        win.show();
    },

    onShopifyShopsTreeItemMouseEnter: function(dataview, record, item, index, e, eOpts) {
        var icons = Ext.DomQuery.select('.x-action-col-icon', item);
        if(record.get('id') > 0) {
            Ext.each(icons, function(icon){
                Ext.get(icon).removeCls('x-hidden');
            });
        }
    },

    onShopifyShopsTreeItemMouseLeave: function(dataview, record, item, index, e, eOpts) {
        var icons = Ext.DomQuery.select('.x-action-col-icon', item);
        Ext.each(icons, function(icon){
            Ext.get(icon).addCls('x-hidden');
        });
    }

});